name: Deploy Environment
on:
  push:
    # branches:
    #   - main

permissions:
    id-token: write
    contents: read
    packages: write

defaults:
  run:
    # We need -e -o pipefail for consistency with GitHub Actions' default behavior
    shell: bash -e -o pipefail {0}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      # Checkout repo and configure AWS creds
    - name: Checkout the code
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
        role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
        aws-region: us-west-2
        # 21600 seconds == 6 hours
        role-duration-seconds: 21600

    # Install zarf. This can be moved into Taskfile    
    - name: Install Zarf
      uses: defenseunicorns/setup-zarf@main
      with:
        # renovate: datasource=github-tags depName=defenseunicorns/zarf versioning=semver
        version: v0.29.2
        download-init-package: true     

    # Install task  
    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.30.1

    # Log into ghcr to publish the oci package
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: dummy
        password: ${{ secrets.GITHUB_TOKEN }}    

    # Pull down remote Taskfile templates
    - name: Init Remote Taskfiles
      run: |
        pwd
        chmod +x ./test.sh
        ./test.sh

    # Spin up k3d
    - name: k3d up
      run: |
        export TASK_X_REMOTE_TASKFILES=1
        task aws-k3d-up

    # init k3d with zarf... TODO Move init to taskfile task
    - name: Zarf init
      run: |
        zarf init -a amd64 --components=git-server --confirm
    
    # Package and deploy dos games zarf package    
    - name: Zarf Package up, publish and deploy dos-games
      run: |
        export TASK_X_REMOTE_TASKFILES=1
        task oci-deploy

    # Cleanup dosgames
    - name: Remove zarf package
      run: |
        export TASK_X_REMOTE_TASKFILES=1
        task oci-remove -y

    # Teardown k3d cluster
    - name: k3d down
      if: always()
      run: |
        export TASK_X_REMOTE_TASKFILES=1
        task aws-k3d-down
